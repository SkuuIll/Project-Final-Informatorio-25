# version: '3.8'  # Comentado para evitar warning

services:
  # Base de datos PostgreSQL
  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: devblog
      POSTGRES_USER: devblog_user
      POSTGRES_PASSWORD: devblog_password
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"  # Cambiar puerto para evitar conflictos
    restart: unless-stopped
    shm_size: 128mb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devblog_user -d devblog"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Redis para cache y colas
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Aplicación Django
  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 blog.wsgi:application"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - USE_POSTGRESQL=True
      - POSTGRES_DB=devblog
      - POSTGRES_USER=devblog_user
      - POSTGRES_PASSWORD=devblog_password
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Worker Celery para tareas asíncronas
  celery:
    build: .
    command: celery -A blog worker -l info
    volumes:
      - .:/app
      - media_volume:/app/media
    environment:
      - DEBUG=False
      - USE_POSTGRESQL=True
      - POSTGRES_DB=devblog
      - POSTGRES_USER=devblog_user
      - POSTGRES_PASSWORD=devblog_password
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Monitor Flower para Celery
  flower:
    build: .
    command: celery -A blog flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - DEBUG=False
      - USE_POSTGRESQL=True
      - POSTGRES_DB=devblog
      - POSTGRES_USER=devblog_user
      - POSTGRES_PASSWORD=devblog_password
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
      - celery
    restart: unless-stopped

  # Nginx para servir archivos estáticos (opcional para producción)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
    depends_on:
      - web
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: